# Only trigger builds for master.
trigger:
  branches:
    include:
      - master
      - mitsuba/master

# Trigger pull request builds against master.
pr:
  autoCancel: true
  branches:
    include:
      - master
      - mitsuba/master

variables:
  ubuntu_packages: 'libglu1-mesa-dev libxxf86vm-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libx11-dev'

# Build specification
jobs:
  - job: External_Packaging_Linux
    pool:
      vmImage: ubuntu-18.04
    steps:
      - script: sudo apt-get install -y --no-install-recommends $(ubuntu_packages)
      - template: ./templates/external_packaging.yml
        parameters:
          cmake_version: 3.15.0
  - job: External_Packaging_MacOS_Mojave
    pool:
      vmImage: macOS-10.14
    steps:
      - template: ./templates/external_packaging.yml
  - job: External_Packaging_Win64_vs2017
    pool:
      vmImage: vs2017-win2016
    steps:
      - template: ./templates/external_packaging.yml
        parameters:
          generator: 'Visual Studio 15 2017'
          extra_args: '-A x64'
          vcvarsall: 'call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64'
  - job: Emscripten
    pool:
      vmImage: ubuntu-18.04
    steps:
      - script: sudo apt-get install -y --no-install-recommends libgles2-mesa-dev
      - template: ./templates/build_setup.yml
        parameters:
          generator: 'Ninja'
      - script: |
          cd "$(Pipeline.Workspace)"
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
        displayName: Install Emscripten
      - script: |
          source "$(Pipeline.Workspace)/emsdk/emsdk_env.sh"
          python -u .ci/build.py -G "Ninja" --cc emcc --cxx em++ --shared build
          python -u .ci/build.py -G "Ninja" --cc emcc --cxx em++ --static build
        displayName: Build with Emscripten
